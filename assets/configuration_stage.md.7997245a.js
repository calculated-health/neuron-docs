import{_ as t,c as e,o as d,a as o}from"./app.f673ca4d.js";const _=JSON.parse('{"title":"Stage","description":"","frontmatter":{},"headers":[],"relativePath":"configuration/stage.md"}'),a={name:"configuration/stage.md"},n=o('<h1 id="stage" tabindex="-1">Stage <a class="header-anchor" href="#stage" aria-hidden="true">#</a></h1><p>Staging configuration used to load data from your storage into the database, such as <code>.csv</code> files that map into the <strong>Inbound</strong> data model along with <strong>Value Sets</strong> and <strong>Meta</strong> data models.</p><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td><code>inbound_path</code></td><td><code>string</code></td><td></td><td>No</td><td>The inbound storage path that contains CSV files that map to the inbound data model. Ex: <code>abfss://inbound@&lt;mystorageaccount&gt;.dfs.core.windows.net/&lt;dirname&gt;</code></td></tr><tr><td><code>outbound_path</code></td><td><code>string</code></td><td></td><td>No</td><td>The outbound storage path that will contain CSV or XML output files from the engine. Ex: <code>abfss://outbound@&lt;mystorageaccount&gt;.dfs.core.windows.net/&lt;dirname&gt;</code></td></tr><tr><td><code>value_set_path</code></td><td><code>string</code></td><td></td><td>No</td><td>The storage path that points to all the value set CSV files that get loaded into the value set data model tables.</td></tr><tr><td><code>meta_path</code></td><td><code>string</code></td><td></td><td>No</td><td>The storage path that points to all the meta CSV files that get loaded into the meta data model tables.</td></tr><tr><td><code>mode</code></td><td><code>enum</code></td><td><code>overwrite</code></td><td>No</td><td><code>overwrite</code> - Will overwrite and fully refresh the inbound data model tables. <code>append</code> - Will append data into the inbound data model tables.</td></tr></tbody></table>',3),s=[n];function r(c,i,h,l,g,u){return d(),e("div",null,s)}const m=t(a,[["render",r]]);export{_ as __pageData,m as default};
