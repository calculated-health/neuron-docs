import{_ as e,c as t,o as d,a as o}from"./app.17e68f5c.js";const f=JSON.parse('{"title":"Measure","description":"","frontmatter":{},"headers":[],"relativePath":"configuration/measure.md"}'),r={name:"configuration/measure.md"},a=o('<h1 id="measure" tabindex="-1">Measure <a class="header-anchor" href="#measure" aria-hidden="true">#</a></h1><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td><code>measure_year</code></td><td><code>number</code></td><td></td><td>Yes</td><td>The contextual measure year for your set of measures. Ex: <code>2022</code></td></tr><tr><td><code>measure_keys</code></td><td><code>list[string]</code></td><td></td><td>No</td><td>List of measure keys to run. If empty, the engine will run all measures in the catalog.</td></tr><tr><td><code>skip_measure_keys</code></td><td><code>list[string]</code></td><td></td><td>No</td><td>List of measure keys to skip during a run. This is useful if you want to run most measures minus a few.</td></tr><tr><td><code>export_csv</code></td><td><code>boolean</code></td><td><code>false</code></td><td>No</td><td>If <code>true</code>, the MeasureJob will export the results to your configured storage account.</td></tr></tbody></table>',2),s=[a];function c(u,n,i,_,h,m){return d(),t("div",null,s)}const p=e(r,[["render",c]]);export{f as __pageData,p as default};
